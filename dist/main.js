/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/artifacts/caffeinerage.js":
/*!***************************************!*\
  !*** ./src/artifacts/caffeinerage.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const SIZES = {\n  CONFRONT_WIDTH: 1084,\n  CONFRONT_HEIGHT: 885\n\n}\n\nclass CaffeineRage {\n  constructor(game, limitBreakCanvas) {\n    console.log(\"CF loaded debug\");\n    this.x = -180;\n    this.y = -340;\n    this.canvas = limitBreakCanvas;\n    this.canvasWidth = 768;\n    this.frameRate = 2;\n    this.game = game;\n    this.image = new Image();\n    this.image.src = './assets/images/limitbreak/rage.png';\n    this.width = SIZES.CONFRONT_WIDTH,\n      this.height = SIZES.CONFRONT_HEIGHT\n    this.frameUp = true;\n    this.step = 0;\n    this.frame = 5;\n    this.phase = 0;\n\n  }\n\n  takeDamage(partyMember) {\n    this.bossFrames = 1;\n    if (Math.random() >= (1 - (partyMember.critChance * 0.01))) {\n      console.log(\"CRITICAL!\")\n      this.hitPoints -= partyMember.attackPower * 2;\n    } else {\n      this.hitPoints -= partyMember.attackPower;\n    }\n    // debug death\n\n    if (this.hitPoints <= 0) {\n      this.death();\n    }\n\n    // console.log(this.hitPoints);\n  }\n\n  death() {\n\n    this.deathStatus = true;\n    // temporary death\n    this.game.bossDeath();\n\n    this.game.player.freeCurrency += 40000;\n  }\n\n  update() {\n    // console.log(this.frame);\n\n    this.step += 1;\n\n    document.getElementById(\"sky-canvas\").style.filter = \"brightness(170%)\";\n    document.getElementById(\"mountains-canvas\").style.filter = \"brightness(180%)\";\n    document.getElementById(\"background-mountains-canvas\").style.filter = \"brightness(180%)\";\n    document.getElementById(\"fuji-canvas\").style.filter = \"brightness(170%)\";\n    document.getElementById(\"cloud-layer-c-canvas\").style.filter = \"brightness(151%)\";\n    // document.getElementById(\"sky-canvas\").style.filter = \"blur(7px)\";\n    // document.getElementById(\"mountains-canvas\").style.filter = \"blur(7px)\";\n    // document.getElementById(\"background-mountains-canvas\").style.filter = \"blur(7px)\";\n    // document.getElementById(\"fuji-canvas\").style.filter = \"blur(7px)\";\n\n\n    \n    if (this.frame > 28) {\n\n      \n      if (this.phase === 4) {\n        document.getElementById(\"sky-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"mountains-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"background-mountains-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"fuji-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"boss-layer-c-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"cloud-layer-c-canvas\").style.filter = \"brightness(100%)\";\n        this.frame = 0;\n        this.canvas.clearRect(0, 0, 800, 800);\n        document.getElementById(\"limit-break-canvas\").style.filter = \"blur(0px)\";\n        this.game.removeLimitBreak();\n      } else {\n        this.frame = 12;\n        this.phase += 1;\n      }\n      \n      \n    } else { \n      if ( this.step > this.frameRate) {\n      this.frame += 1;\n      this.step = 0\n      }\n    }\n\n    if (this.frame >= 14) {\n      if (this.frame % 2 === 0) {\n        document.getElementById(\"boss-layer-c-canvas\").style.filter = \"brightness(300%)\";\n        \n      } else {\n        document.getElementById(\"boss-layer-c-canvas\").style.filter = \"brightness(100%)\";\n      }\n\n      if (this.frame >= 17 && this.frame <= 20) {\n        // console.log(this.frame) \n        // hero A hit with x3\n        const currentBoss = this.game.boss;\n        currentBoss.takeDamageLimitBreak(this.game.heroA.attackPower * 6, this.game.heroA.critChance);\n      \n      }\n        \n    }\n\n    \n\n\n  }\n\n  draw() {\n    \n\n    this.canvas.clearRect(0, 0, 800, 800);\n    this.canvas.save();\n\n    this.canvas.drawImage(\n      this.image,\n      this.width * this.frame,\n      0,\n      this.width,\n      this.height,\n      this.x,\n      this.y,\n      this.width,\n      this.height\n    );\n    this.canvas.restore();\n    this.update();\n  }\n}\n\nmodule.exports = CaffeineRage;\n\n\n//# sourceURL=webpack:///./src/artifacts/caffeinerage.js?");

/***/ }),

/***/ "./src/artifacts/omnibag.js":
/*!**********************************!*\
  !*** ./src/artifacts/omnibag.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const SIZES = {\n  CONFRONT_WIDTH: 864,\n  CONFRONT_HEIGHT: 666\n\n}\n\nclass Omnibag {\n  constructor(game, limitBreakCanvas) {\n    console.log(\"OB loaded debug\");\n    this.x = -100;\n    this.y = -30;\n    this.canvas = limitBreakCanvas;\n    this.canvasWidth = 768;\n    this.frameRate = 1;\n    this.game = game;\n    this.image = new Image();\n    this.image.src = './assets/images/limitbreak/omnibag.png';\n    this.canvasList = [\"game-canvas\", \"menu-canvas\", \"hill-canvas\", \"sky-canvas\", \"fuji-canvas\", \"cloud-layer-a-canvas\", \"cloud-layer-c-canvas\",\n      \"boss-layer-c-canvas\", \"mountains-canvas\", \"background-mountains-canvas\"];\n    this.width = SIZES.CONFRONT_WIDTH,\n    this.height = SIZES.CONFRONT_HEIGHT\n    this.frameUp = true;\n    this.step = 0;\n    this.frame = 0;\n    this.phase = 0;\n    this.downPhase = 20;\n    this.canvasList.forEach((canvas) => {\n      document.getElementById(canvas).style.transition = \"all 0.8s\";\n\n    });\n    document.getElementById(\"boss-layer-c-canvas\").style.transition = \"all 0.8s\";\n\n  }\n\n  takeDamage(partyMember) {\n    this.bossFrames = 1;\n    if (Math.random() >= (1 - (partyMember.critChance * 0.01))) {\n      console.log(\"CRITICAL!\")\n      this.hitPoints -= partyMember.attackPower * 2;\n    } else {\n      this.hitPoints -= partyMember.attackPower;\n    }\n    // debug death\n\n    if (this.hitPoints <= 0) {\n      this.death();\n    }\n\n    // console.log(this.hitPoints);\n  }\n\n  death() {\n\n    this.deathStatus = true;\n    // temporary death\n    this.game.bossDeath();\n\n    this.game.player.freeCurrency += 40000;\n  }\n\n  update() {\n    // console.log(this.frame);\n\n    this.step += 1;\n\n    this.canvasList.forEach( (canvas) => {\n      document.getElementById(canvas).style.width = \"50%\";\n      document.getElementById(canvas).style.top = \"100px\";\n      document.getElementById(canvas).style.filter = \"blur(2px)\";\n      document.getElementById(canvas).style.opacity = \"0.8\";\n    });\n\n\n    if (this.frame > 14) {\n\n\n      if (this.phase === 8) {\n        document.getElementById(\"sky-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"mountains-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"background-mountains-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"fuji-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"boss-layer-c-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"cloud-layer-c-canvas\").style.filter = \"brightness(100%)\";\n        \n        \n        this.canvasList.forEach((canvas) => {\n          document.getElementById(canvas).style.width = \"100%\";\n          document.getElementById(canvas).style.top = \"0px\";\n          document.getElementById(canvas).style.opacity = \"1\";\n          document.getElementById(canvas).style.filter = \"blur(0px)\";\n          \n        });\n\n        document.getElementById(\"boss-layer-c-canvas\").style.transition = \"all 0s\";\n        document.getElementById(\"game-canvas\").style.top = \"-1px\";\n        this.frame = 0;\n        this.canvas.clearRect(0, 0, 800, 800);\n        document.getElementById(\"limit-break-canvas\").style.filter = \"blur(0px)\";\n        this.game.removeLimitBreak();\n      } else {\n        this.frame = 3;\n        this.phase += 1;\n      }\n\n\n    } else {\n      if (this.step > this.frameRate) {\n        this.frame += 1;\n        this.step = 0\n      }\n    }\n\n    if (this.frame >= 8) {\n      if (this.frame % 2 === 0) {\n        document.getElementById(\"boss-layer-c-canvas\").style.filter = \"brightness(300%)\";\n        this.canvasList.forEach((canvas) => {\n          document.getElementById(canvas).style.width = \"70%\";\n\n          this.canvasList.forEach((canvas) => {\n            \n            document.getElementById(canvas).style.filter = \"brightness(129%)\";\n\n          });\n      \n        });\n      } else {\n        document.getElementById(\"boss-layer-c-canvas\").style.filter = \"brightness(100%)\";\n        this.canvasList.forEach((canvas) => {\n          document.getElementById(canvas).style.width = \"50%\";\n          this.canvasList.forEach((canvas) => {\n\n            document.getElementById(canvas).style.filter = \"brightness(59%)\";\n\n          });\n        });\n      }\n\n      if (this.frame >= 8 && this.frame <= 14) {\n        const currentBoss = this.game.boss;\n        currentBoss.takeDamageLimitBreak(this.game.heroC.attackPower * 3, this.game.heroC.critChance);\n\n      }\n    }\n\n\n\n\n  }\n\n  draw() {\n\n\n    this.canvas.clearRect(0, 0, 800, 800);\n    this.canvas.save();\n\n    this.canvas.drawImage(\n      this.image,\n      this.width * this.frame,\n      0,\n      this.width,\n      this.height,\n      this.x,\n      this.y,\n      this.width,\n      this.height\n    );\n    this.canvas.restore();\n    this.update();\n  }\n}\n\nmodule.exports = Omnibag;\n\n\n//# sourceURL=webpack:///./src/artifacts/omnibag.js?");

/***/ }),

/***/ "./src/artifacts/teadrizzle.js":
/*!*************************************!*\
  !*** ./src/artifacts/teadrizzle.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const SIZES = {\n  RIGHT_WIDTH: 826,\n  RIGHT_HEIGHT: 1346,\n  LEFT_WIDTH: 528,\n  LEFT_HEIGHT: 776,\n  CONFRONT_WIDTH: 980,\n  CONFRONT_HEIGHT: 1000\n\n}\n\nclass TeaDrizzle {\n  constructor(game, limitBreakCanvas) {\n    this.x = 0;\n    this.y = -840;\n    this.canvas = limitBreakCanvas;\n    this.canvasWidth = 768;\n    this.frameRate = 2;\n    this.game = game;\n    this.image = new Image();\n    this.image.src = './assets/images/limitbreak/beamlimitbreak.png';\n    this.width = SIZES.RIGHT_WIDTH,\n    this.height = SIZES.RIGHT_HEIGHT\n    this.frameUp = true;\n    this.phase = 0;\n    this.step = 0;\n    this.frame = 5;\n\n  }\n\n  takeDamage(partyMember) {\n    this.bossFrames = 1;\n    if (Math.random() >= (1 - (partyMember.critChance * 0.01))) {\n      console.log(\"CRITICAL!\")\n      this.hitPoints -= partyMember.attackPower * 2;\n    } else {\n      this.hitPoints -= partyMember.attackPower;\n    }\n    // debug death\n\n    if (this.hitPoints <= 0) {\n      this.death();\n    }\n\n    // console.log(this.hitPoints);\n  }\n\n  death() {\n\n    this.deathStatus = true;\n    // temporary death\n    this.game.bossDeath();\n\n    this.game.player.freeCurrency += 40000;\n  }\n\n  update() {\n    // console.log(this.frame);\n\n    this.step += 1;\n\n    document.getElementById(\"sky-canvas\").style.filter = \"brightness(20%)\";\n    document.getElementById(\"mountains-canvas\").style.filter = \"brightness(80%)\";\n    document.getElementById(\"background-mountains-canvas\").style.filter = \"brightness(70%)\";\n    document.getElementById(\"fuji-canvas\").style.filter = \"brightness(60%)\";\n\n    if (this.frame > 36) {\n      if (this.phase === 3) {\n        document.getElementById(\"sky-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"mountains-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"background-mountains-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"fuji-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"boss-layer-c-canvas\").style.filter = \"brightness(100%)\";\n        this.frame = 0;\n        this.canvas.clearRect(0, 0, 800, 800);\n        this.game.removeLimitBreak();\n      } else {\n        this.frame = 12;\n        this.phase += 1;\n      }\n    }\n\n    if (this.frame >= 14) {\n      if (this.frame % 2 === 0 ) {\n        document.getElementById(\"boss-layer-c-canvas\").style.filter = \"brightness(300%)\";\n      } else {\n        document.getElementById(\"boss-layer-c-canvas\").style.filter = \"brightness(100%)\";\n      }\n    }\n\n    if (this.step > this.frameRate) {\n      this.frame += 1;\n      this.step = 0\n    }\n\n    if (this.frame >= 17 && this.frame <= 36) {\n      // console.log(this.frame) \n      // hero A hit with x3\n      const currentBoss = this.game.boss;\n      currentBoss.takeDamageLimitBreak(this.game.heroB.attackPower * 1.5, this.game.heroB.critChance);\n      // console.log(this.game.heroB.attackPower);\n\n    }\n\n\n  }\n\n  draw() {\n    \n\n    this.canvas.clearRect(0, 0, 800, 800);\n    this.canvas.save();\n\n    this.canvas.drawImage(\n      this.image,\n      this.width * this.frame,\n      0,\n      this.width,\n      this.height,\n      this.x,\n      this.y,\n      this.width,\n      this.height\n    );\n    this.canvas.restore();\n    this.update();\n  }\n}\n\nmodule.exports = TeaDrizzle;\n\n\n//# sourceURL=webpack:///./src/artifacts/teadrizzle.js?");

/***/ }),

/***/ "./src/artifacts/teapaw.js":
/*!*********************************!*\
  !*** ./src/artifacts/teapaw.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const SIZES = {\n  CONFRONT_WIDTH: 894,\n  CONFRONT_HEIGHT: 885\n\n}\n\nclass CaffeineRage {\n  constructor(game, limitBreakCanvas) {\n    console.log(\"CF loaded debug\");\n    this.x = 0;\n    this.y = 10;\n    this.canvas = limitBreakCanvas;\n    this.canvasWidth = 768;\n    this.frameRate = 4;\n    this.game = game;\n    this.image = new Image();\n    this.image.src = './assets/images/limitbreak/teapaw3.png';\n    this.width = SIZES.CONFRONT_WIDTH,\n      this.height = SIZES.CONFRONT_HEIGHT\n    this.frameUp = true;\n    this.step = 0;\n    this.frame = 0;\n    this.phase = 0;\n    this.frameUp = true;\n\n  }\n\n  takeDamage(partyMember) {\n    this.bossFrames = 1;\n    if (Math.random() >= (1 - (partyMember.critChance * 0.01))) {\n      console.log(\"CRITICAL!\")\n      this.hitPoints -= partyMember.attackPower * 2;\n    } else {\n      this.hitPoints -= partyMember.attackPower;\n    }\n    // debug death\n\n    if (this.hitPoints <= 0) {\n      this.death();\n    }\n\n    // console.log(this.hitPoints);\n  }\n\n  death() {\n\n    this.deathStatus = true;\n    // temporary death\n    this.game.bossDeath();\n\n    this.game.player.freeCurrency += 40000;\n  }\n\n  update() {\n    // console.log(this.frame);\n\n    this.step += 1;\n\n    document.getElementById(\"sky-canvas\").style.filter = \"brightness(30%)\";\n    document.getElementById(\"mountains-canvas\").style.filter = \"brightness(30%)\";\n    document.getElementById(\"background-mountains-canvas\").style.filter = \"brightness(30%)\";\n    document.getElementById(\"fuji-canvas\").style.filter = \"brightness(30%)\";\n    document.getElementById(\"hill-canvas\").style.filter = \"brightness(30%)\";\n    document.getElementById(\"cloud-layer-c-canvas\").style.filter = \"brightness(30%)\";\n    document.getElementById(\"sky-canvas\").style.filter = \"blur(7px)\";\n    document.getElementById(\"mountains-canvas\").style.filter = \"blur(7px)\";\n    document.getElementById(\"cloud-layer-a-canvas\").style.filter = \"blur(7px)\";\n    document.getElementById(\"background-mountains-canvas\").style.filter = \"blur(7px)\";\n    document.getElementById(\"fuji-canvas\").style.filter = \"blur(7px)\";\n    if (this.frame > 10) {\n      this.frameUp = false;\n    } else if (this.frame === 0) {\n      this.frameUp = true;\n    }\n\n\n    if (this.frame > 10) {\n\n\n      if (this.phase === 4) {\n        document.getElementById(\"sky-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"mountains-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"background-mountains-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"fuji-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"boss-layer-c-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"cloud-layer-a-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"cloud-layer-c-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"hill-canvas\").style.filter = \"brightness(100%)\";\n        this.frame = 0;\n        this.game.autoAttackSpeed = 1;\n        this.canvas.clearRect(0, 0, 800, 800);\n        document.getElementById(\"limit-break-canvas\").style.filter = \"blur(0px)\";\n        this.game.removeLimitBreak();\n      } else {\n        this.frame = 1;\n        this.phase += 1;\n      }\n\n\n    } else if (this.step > this.frameRate) {\n      this.step = 0;\n      if (this.frameUp) {\n        this.frame += 1;\n      } else {\n        this.frame -= 1;\n      }\n\n    }\n\n    if (this.frame >= 0) {\n      if (this.frame % 2 === 0) {\n        document.getElementById(\"boss-layer-c-canvas\").style.filter = \"brightness(300%)\";\n      } else {\n        document.getElementById(\"boss-layer-c-canvas\").style.filter = \"brightness(100%)\";\n      }\n\n      if (this.frame >= 0 && this.frame <= 11) {\n        const currentBoss = this.game.boss;\n        currentBoss.takeDamageLimitBreak(this.game.heroD.attackPower * 1.5, this.game.heroB.critChance);\n        // console.log(this.game.heroB.attackPower);\n\n\n        // console.log(this.game.autoAttackFrames);\n      }\n\n    }\n\n\n\n\n  }\n\n  draw() {\n\n\n    this.canvas.clearRect(0, 0, 800, 800);\n    this.canvas.save();\n\n    this.canvas.drawImage(\n      this.image,\n      this.width * this.frame,\n      0,\n      this.width,\n      this.height,\n      this.x,\n      this.y,\n      this.width,\n      this.height\n    );\n    this.canvas.restore();\n    this.update();\n  }\n}\n\nmodule.exports = CaffeineRage;\n\n\n//# sourceURL=webpack:///./src/artifacts/teapaw.js?");

/***/ }),

/***/ "./src/artifacts/teasun.js":
/*!*********************************!*\
  !*** ./src/artifacts/teasun.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const SIZES = {\n  CONFRONT_WIDTH: 600,\n  CONFRONT_HEIGHT: 885\n\n}\n\nclass CaffeineRage {\n  constructor(game, limitBreakCanvas) {\n    console.log(\"CF loaded debug\");\n    this.x = 70;\n    this.y = 110;\n    this.canvas = limitBreakCanvas;\n    this.canvasWidth = 768;\n    this.frameRate = 4;\n    this.game = game;\n    this.image = new Image();\n    this.image.src = './assets/images/limitbreak/greenteasun.png';\n    this.width = SIZES.CONFRONT_WIDTH,\n      this.height = SIZES.CONFRONT_HEIGHT\n    this.frameUp = true;\n    this.step = 0;\n    this.frame = 5;\n    this.phase = 0;\n    this.frameUp = true;\n\n  }\n\n  takeDamage(partyMember) {\n    this.bossFrames = 1;\n    if (Math.random() >= (1 - (partyMember.critChance * 0.01))) {\n      console.log(\"CRITICAL!\")\n      this.hitPoints -= partyMember.attackPower * 2;\n    } else {\n      this.hitPoints -= partyMember.attackPower;\n    }\n    // debug death\n\n    if (this.hitPoints <= 0) {\n      this.death();\n    }\n\n    // console.log(this.hitPoints);\n  }\n\n  death() {\n\n    this.deathStatus = true;\n    // temporary death\n    this.game.bossDeath();\n\n    this.game.player.freeCurrency += 40000;\n  }\n\n  update() {\n    // console.log(this.frame);\n\n    this.step += 1;\n\n    document.getElementById(\"sky-canvas\").style.filter = \"brightness(30%)\";\n    document.getElementById(\"mountains-canvas\").style.filter = \"brightness(30%)\";\n    document.getElementById(\"background-mountains-canvas\").style.filter = \"brightness(30%)\";\n    document.getElementById(\"fuji-canvas\").style.filter = \"brightness(30%)\";\n    document.getElementById(\"hill-canvas\").style.filter = \"brightness(30%)\";\n    document.getElementById(\"cloud-layer-c-canvas\").style.filter = \"brightness(30%)\";\n    document.getElementById(\"sky-canvas\").style.filter = \"blur(7px)\";\n    document.getElementById(\"mountains-canvas\").style.filter = \"blur(7px)\";\n    document.getElementById(\"cloud-layer-a-canvas\").style.filter = \"blur(7px)\";\n    document.getElementById(\"background-mountains-canvas\").style.filter = \"blur(7px)\";\n    document.getElementById(\"fuji-canvas\").style.filter = \"blur(7px)\";\n    if (this.frame > 6) {\n      this.frameUp = false;\n    } else if (this.frame === 0) {\n      this.frameUp = true;\n    }\n\n\n    if (this.frame > 6) {\n\n\n      if (this.phase === 7) {\n        document.getElementById(\"sky-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"mountains-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"background-mountains-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"fuji-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"boss-layer-c-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"cloud-layer-a-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"cloud-layer-c-canvas\").style.filter = \"brightness(100%)\";\n        document.getElementById(\"hill-canvas\").style.filter = \"brightness(100%)\";\n        this.frame = 0;\n        this.game.autoAttackSpeed = 1;\n        this.canvas.clearRect(0, 0, 800, 800);\n        document.getElementById(\"limit-break-canvas\").style.filter = \"blur(0px)\";\n        this.game.removeLimitBreak();\n      } else {\n        this.frame = 1;\n        this.phase += 1;\n      }\n\n\n    } else if (this.step > this.frameRate) {\n      this.step = 0;\n      if (this.frameUp) {\n        this.frame += 1;\n      } else {\n        this.frame -= 1;\n      }\n\n    }\n\n    if (this.frame >= 6) {\n      if (this.frame % 2 === 0) {\n        document.getElementById(\"boss-layer-c-canvas\").style.filter = \"brightness(300%)\";\n      } else {\n        document.getElementById(\"boss-layer-c-canvas\").style.filter = \"brightness(100%)\";\n      }\n\n      if (this.frame >= 0 && this.frame <= 6) {\n        this.game.autoAttackSpeed = 25;\n\n        // console.log(this.game.autoAttackFrames);\n      }\n\n    }\n\n\n\n\n  }\n\n  draw() {\n\n\n    this.canvas.clearRect(0, 0, 800, 800);\n    this.canvas.save();\n\n    this.canvas.drawImage(\n      this.image,\n      this.width * this.frame,\n      0,\n      this.width,\n      this.height,\n      this.x,\n      this.y,\n      this.width,\n      this.height\n    );\n    this.canvas.restore();\n    this.update();\n  }\n}\n\nmodule.exports = CaffeineRage;\n\n\n//# sourceURL=webpack:///./src/artifacts/teasun.js?");

/***/ }),

/***/ "./src/boss.js":
/*!*********************!*\
  !*** ./src/boss.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\nclass Boss {\n  constructor(context, image, startHeight, srcWidth, speed, player) {\n    this.context = context;\n    this.image = image;\n    this.hitPoints = 1000;\n    this.x = 0;\n    this.y = startHeight;\n    this.srcWidth = srcWidth;\n    this.flyUp = false;\n    this.bossFrames = 0;\n    this.speed = speed;\n    this.flySpeed = speed;\n    this.height = this.context.canvas.height;\n    this.width = this.context.canvas.width;\n    this.player = player;\n    this.hit = false;\n    \n    \n    setInterval(() => this.changeSprite(), 400);\n  }\n\n  takeDamage(partyMember) {\n    this.bossFrames = 1;\n    if (Math.random() >= (1 - (partyMember.critChance * 0.01))) {\n      console.log(\"CRITICAL!\")\n      this.hitPoints -= partyMember.attackPower * 2;\n    } else {\n      this.hitPoints -= partyMember.attackPower;\n    }\n    // debug death\n    if ( this.hitPoints <= 0 ) {\n      this.death();\n    }\n  }\n\n  takeDamageLimitBreak(heroDamage) {\n    this.hitPoints -= heroDamage;\n  }\n\n  death() {\n    // temporary death\n    this.hitPoints += 1000;\n    this.x = 200;\n    this.y = 60;\n\n    this.player.freeCurrency += 40000;\n  }\n\n  changeSprite() {\n    let random = Math.floor((Math.random() * 3) + 1)-1;\n    \n    switch(random) {\n      case 0:\n        return this.image.src = \"./assets/images/characters/bosses/mana-beast-idle.png\";\n      case 1:\n        return this.image.src = \"./assets/images/characters/bosses/mana-beast-idle2.png\";\n      case 2:\n        return this.image.src = \"./assets/images/characters/bosses/mana-beast-idle3.png\";\n    }\n      \n    \n  }\n\n  shift() {\n    let shiftValue = this.flySpeed;\n    if (this.y <= 80) {\n      this.flyUp = true;\n    }\n     else if (this.y >= 125) {\n      this.flyUp = false;\n    }\n    \n    if (this.flyUp === true) {\n      this.y += shiftValue;\n    } else if (this.flyUp === false) {\n      this.y -= shiftValue;\n    }\n  }\n  \n\n  draw() {\n    \n    if (this.bossFrames > 0 ) {\n      this.image.src = \"./assets/images/characters/bosses/mana-beast-idle3-damaged.png\";\n      if (this.hit) {\n        this.y += 4;\n        this.hit = !this.hit;\n      } else {\n        this.y -= 4;\n        this.hit = !this.hit;\n      }\n      this.bossFrames -= 1;\n    } else {\n      this.shift();\n      this.x -= this.speed;\n      this.context.clearRect(0, 0, this.width, this.height);\n      this.context.drawImage(this.image, this.x, this.y);\n      if (this.x >= this.srcWidth - 350) {\n        this.speed = -(this.speed)\n      }\n      else if (this.x <= -25) {\n        this.speed = -(this.speed)\n      }\n    }\n\n    const hitPoints = `HP: ${this.hitPoints}`;\n\n    this.context.font = \"20px Arial\";\n    this.context.fillStyle = 'red';\n    this.context.strokeStyle = 'white';\n    this.context.fillText(hitPoints, this.x+160, this.y+20);\n    this.context.strokeText(hitPoints, this.x + 160, this.y + 20);\n  }\n}\n\nmodule.exports = Boss;\n\n\n//# sourceURL=webpack:///./src/boss.js?");

/***/ }),

/***/ "./src/bosses/alishar.js":
/*!*******************************!*\
  !*** ./src/bosses/alishar.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const SIZES = {\n  RIGHT_WIDTH: 380,\n  RIGHT_HEIGHT: 776,\n  LEFT_WIDTH: 528,\n  LEFT_HEIGHT: 776,\n  CONFRONT_WIDTH: 980,\n  CONFRONT_HEIGHT: 1000\n\n}\n\nconst DmgText = __webpack_require__(/*! ../damage */ \"./src/damage.js\");\n\nclass Alishar {\n  constructor(game, bossCanvas) {\n    this.maxHitPoints = game.level * game.monsterBaseHP;\n    this.hitPoints = this.maxHitPoints;\n    this.x = 100;\n    this.y = -80;\n    this.bossFrames = 0;\n    this.canvas = bossCanvas;\n    this.canvasWidth = 768;\n    this.frameRate = 4;\n    this.game = game;\n    this.speed = -3;\n    this.image = new Image();\n    this.image.src = './assets/images/characters/bosses/alishar/alishar-right.png';\n    this.width = SIZES.RIGHT_WIDTH,\n    this.height = SIZES.RIGHT_HEIGHT\n\n    this.frameUp = true;\n    this.phase = 2;\n    this.phaseFrames = 0;\n    this.step = 0;\n    this.frame = 0;\n    this.deathStatus = false;\n    this.deathFrames = 400;\n\n  }\n\n  takeDamage(partyMember) {\n    this.bossFrames = 1;\n    if (Math.random() >= (1 - (partyMember.critChance * 0.01))) {\n      console.log(\"CRITICAL!\")\n      this.hitPoints -= partyMember.attackPower * 2;\n      let damageText = new DmgText(this.game, partyMember.attackPower * 2, true);\n\n      this.game.damageTexts.push(damageText);\n    } else {\n      this.hitPoints -= partyMember.attackPower;\n      let damageText = new DmgText(this.game, partyMember.attackPower, false);\n\n      this.game.damageTexts.push(damageText);\n    }\n    // debug death\n\n    if (this.hitPoints <= 0) {\n      this.death();\n    }\n\n    // console.log(this.hitPoints);\n  }\n\n  takeDamageLimitBreak(heroDamage, critChance) {\n    this.hitPoints -= heroDamage;\n    let damageText;\n    if (Math.random() >= (1 - (critChance * 0.01))) {\n      console.log(\"JKLDFSDS\");\n      damageText = new DmgText(this.game, (heroDamage * 1.5), true);\n    } else {\n      damageText = new DmgText(this.game, heroDamage, false);\n    }\n    this.game.damageTexts.push(damageText);\n  }\n\n  death() {\n\n    this.deathStatus = true;\n    // temporary death\n    this.game.bossDeath();\n\n  }\n\n\n  // shift() {\n  //   let shiftValue = this.flySpeed;\n  //   if (this.y <= 80) {\n  //     this.flyUp = true;\n  //   }\n  //   else if (this.y >= 125) {\n  //     this.flyUp = false;\n  //   }\n\n  //   if (this.flyUp === true) {\n  //     this.y += shiftValue;\n  //   } else if (this.flyUp === false) {\n  //     this.y -= shiftValue;\n  //   }\n  // }\n\n  update() {\n    // console.log(this.frame);\n\n    this.step += 1;\n\n    if (this.frame > 6 ) {\n      this.frameUp = false;\n    } else if (this.frame === 0 ) {\n      this.frameUp = true;\n    }\n\n    if (this.step > this.frameRate) {\n      this.step = 0;\n      if (this.frameUp) {\n        this.frame += 1;\n      } else {\n        this.frame -= 1;\n      }\n   \n    }\n\n\n  }\n\n  hpPercentage() {\n    let currentHpPercentage = (this.hitPoints / this.maxHitPoints);\n    if (currentHpPercentage >= 0) {\n      return currentHpPercentage;\n    } else\n      return 0;\n  }\n  deathAnimation() {\n    // console.log(this.deathFrames);\n    this.deathFrames -= 1;\n    document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"6\";\n    this.image.src = './assets/images/characters/bosses/dongdong/dong-dong-dead.png';\n    this.frameRate = 55;\n    // console.log(this.x);\n    this.width = dongDongSizes.DEAD_WIDTH;\n    this.height = dongDongSizes.DEAD_HEIGHT;\n    this.y = -54;\n\n    if (this.deathFrames === 0) {\n      this.game.bossDeath();\n\n    }\n\n  }\n\n  shift() {\n    // console.log(this.x)\n    // console.log(this.phaseFrames);\n    // console.log(this.phase);\n    // console.log(this.deathStatus);\n    // console.log(`HP: ${this.hitPoints}`);\n\n    // console.log(this.image.src);\n    if (this.phase === 3) {\n\n      if (this.x <= -140) {\n        this.x += 1;\n      }\n\n      this.y = -300;\n      this.phaseFrames += 1;\n      this.width = SIZES.CONFRONT_WIDTH;\n      this.height = SIZES.CONFRONT_HEIGHT;\n      this.image.src = './assets/images/characters/bosses/alishar/alishar-idle.png';\n      document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"8\";\n\n      if (this.phaseFrames >= 1160) {\n        this.phaseFrames = 0;\n        this.phase = 0;\n        this.speed = -3;\n      } else {\n        this.speed = 0;\n      }\n    } else if (this.x >= (this.canvasWidth)) {\n\n      this.width = SIZES.LEFT_WIDTH;\n      this.height = SIZES.LEFT_HEIGHT;\n      this.image.src = './assets/images/characters/bosses/alishar/alishar-left.png';\n      document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"3\";\n      this.y = -150;\n      \n\n      this.speed = -(this.speed);\n    } else if (this.x <= -this.width -100) {\n      this.width = SIZES.RIGHT_WIDTH;\n      this.height = SIZES.RIGHT_HEIGHT;\n      this.x = -300;\n      this.y = -80;\n      this.phase += 1\n      if (this.phase === 3){\n        this.x -= 500;\n      }\n\n      this.speed = -(this.speed);\n      this.image.src = './assets/images/characters/bosses/alishar/alishar-right.png';\n      document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"2\";\n    }\n\n\n    this.x += -(this.speed);\n\n\n  }\n\n\n  draw() {\n    this.update();\n    this.shift();\n\n    // requestAnimationFrame(this.draw);\n\n    // console.log(this.canvas);\n    // console.log(this.bossFrames);\n\n\n    this.canvas.clearRect(0, 0, 800, 800);\n    this.canvas.save();\n\n    this.canvas.drawImage(\n      this.image,\n      this.width * this.frame,\n      0,\n      this.width,\n      this.height,\n      this.x,\n      this.y,\n      this.width,\n      this.height\n    );\n    this.canvas.restore();\n  }\n}\n\nmodule.exports = Alishar;\n\n\n//# sourceURL=webpack:///./src/bosses/alishar.js?");

/***/ }),

/***/ "./src/bosses/dongdong.js":
/*!********************************!*\
  !*** ./src/bosses/dongdong.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const dongDongSizes = {\n  RUN_RIGHT_WIDTH: 393,\n  RUN_RIGHT_HEIGHT: 342,\n  RUN_LEFT_WIDTH: 609,\n  RUN_LEFT_HEIGHT: 485,\n  PHASE_WIDTH: 761,\n  PHASE_HEIGHT: 1200,\n  DEAD_WIDTH: 925,\n  DEAD_HEIGHT: 1600,\n}\n\nconst DmgText = __webpack_require__(/*! ../damage */ \"./src/damage.js\");\n\nclass DongDong {\n  constructor(game, bossCanvas) {\n    // console.log(bossCanvas);\n    // console.log(game);\n    // console.log(bossCanvas); \n    this.maxHitPoints = game.level * game.monsterBaseHP;\n    this.hitPoints = this.maxHitPoints;\n    this.x = 500;\n    this.y = -30;\n    this.bossFrames = 0;\n    this.canvas = bossCanvas;\n    this.canvasWidth = 768;\n    this.frameRate = 5;\n    this.game = game;\n    this.speed = 4;\n    this.image = new Image();\n    this.image.src = './assets/images/characters/bosses/dongdong/dong-run-sprite-sheet-left-big.png';\n    this.width = dongDongSizes.RUN_LEFT_WIDTH;\n    this.height = dongDongSizes.RUN_LEFT_HEIGHT;\n\n    \n\n    this.phase = 1;\n    this.phaseFrames = 0;\n    this.step = 0;\n    this.frame = 0;\n    this.deathStatus = false;\n    this.deathFrames = 400;\n\n  }\n\n  takeDamage(partyMember) {\n    this.bossFrames = 1;\n    if (Math.random() >= (1 - (partyMember.critChance * 0.01))) {\n      console.log(\"CRITICAL!\")\n      this.hitPoints -= partyMember.attackPower * 2;\n      let damageText = new DmgText(this.game, partyMember.attackPower * 2, true);\n\n      this.game.damageTexts.push(damageText);\n    } else {\n      this.hitPoints -= partyMember.attackPower;\n      let damageText = new DmgText(this.game, partyMember.attackPower, false);\n\n      this.game.damageTexts.push(damageText);\n    }\n    // debug death\n    \n    // console.log(this.hitPoints);\n  }\n\n  takeDamageLimitBreak(heroDamage, critChance) {\n    this.hitPoints -= heroDamage;\n    let damageText;\n    if (Math.random() >= (1 - (critChance * 0.01))) {\n      console.log(\"JKLDFSDS\");\n      damageText = new DmgText(this.game, (heroDamage * 1.5), true);\n    } else {\n      damageText = new DmgText(this.game, heroDamage, false);\n    }\n    this.game.damageTexts.push(damageText);\n    \n  }\n\n  hpPercentage () {\n    let currentHpPercentage = (this.hitPoints / this.maxHitPoints);\n    if (currentHpPercentage >= 0) {\n      return currentHpPercentage;\n    } else \n    return 0;\n  }\n\n  death() {\n    \n    this.deathStatus = true;\n    // temporary death\n  }\n\n  update () {\n\n    this.step += 1;\n\n    if (this.step > this.frameRate){\n      this.step = 0;\n      this.frame += 1;\n    }\n\n    if (this.frame > 9 ) {\n      this.frame = 0 ;\n    }\n\n  }\n\n  deathAnimation() {\n    // console.log(this.deathFrames);\n    this.deathFrames -= 1;\n    document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"6\";\n    this.image.src = './assets/images/characters/bosses/dongdong/dong-dong-dead.png';\n    this.frameRate = 55;\n    // console.log(this.x);\n    this.width = dongDongSizes.DEAD_WIDTH;\n    this.height = dongDongSizes.DEAD_HEIGHT;\n    this.y = -54;\n\n    if (this.deathFrames <= 0) {\n      this.game.bossDeath();\n      this.deathFrames = 0;\n\n    }\n   \n  }\n\n  shift() {\n    // console.log(this.x)\n    // console.log(this.phaseFrames);\n    // console.log(this.phase);\n    // console.log(this.deathStatus);\n    // console.log(`HP: ${this.hitPoints}`);\n\n    // console.log(this.image.src);\n    if (this.deathStatus) {\n      this.y = -54;\n      \n      // if dead and x position is returning from moving -> right\n      if (this.x >= -120) {\n        // console.log(this.x)\n        this.frame = 0;\n        document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"6\";\n        this.image.src = './assets/images/characters/bosses/dongdong/dong-dong-dead.png';\n        this.width = dongDongSizes.DEAD_WIDTH;\n        this.height = dongDongSizes.DEAD_HEIGHT;\n        this.speed = 3;\n        // up \n      } else {\n        \n        this.speed = 0;\n        this.deathAnimation();\n      }\n    } else if (this.phase === 2 ) {\n\n      if (this.x >= 120) {\n        this.x -= 2;\n      }\n      \n      this.y = -200;\n      this.phaseFrames += 1;\n      this.width = dongDongSizes.PHASE_WIDTH;\n      this.height = dongDongSizes.PHASE_HEIGHT;\n      this.image.src = './assets/images/characters/bosses/dongdong/dong-dong-confront.png';\n      document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"8\";\n\n      if (this.phaseFrames >= 760) {\n        this.phaseFrames = 0;\n        this.phase = 0;\n        this.speed = 6;\n      } else {\n        this.speed = 0;\n      }\n    } else if (this.x >= (this.canvasWidth )) {\n      \n      this.width = dongDongSizes.RUN_LEFT_WIDTH;\n      this.height = dongDongSizes.RUN_LEFT_HEIGHT;\n      this.image.src = './assets/images/characters/bosses/dongdong/dong-run-sprite-sheet-left-big.png';\n      document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"5\";\n      this.y = -40; \n      this.phase += 1\n      if (this.hitPoints <= 0) {\n        this.frameRate = 0;\n        this.death();\n      }\n      this.speed = -(this.speed);\n    } else if (this.x <= -this.width) {\n      this.width = dongDongSizes.RUN_RIGHT_WIDTH;\n      this.height = dongDongSizes.RUN_RIGHT_HEIGHT;\n      this.x = -300;\n      this.y = 0;\n      \n      this.speed = -(this.speed);\n      this.image.src = './assets/images/characters/bosses/dongdong/dong-run-sprite-sheet-right-hills.png';\n      document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"3\"; \n    }\n\n\n    this.x += -(this.speed);\n    \n    \n  }\n\n\n  draw() {\n    this.update();\n    this.shift();\n    this.canvas.clearRect(0, 0, 800, 800);\n    this.canvas.save();\n    \n    this.canvas.drawImage(\n      this.image,\n      this.width * this.frame,\n      0,\n      this.width,\n      this.height,\n      this.x,\n      this.y,\n      this.width,\n      this.height \n    );\n    this.canvas.restore();\n  }\n}\n\nmodule.exports = DongDong;\n\n\n//# sourceURL=webpack:///./src/bosses/dongdong.js?");

/***/ }),

/***/ "./src/bosses/lion.js":
/*!****************************!*\
  !*** ./src/bosses/lion.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const dongDongSizes = {\n  RUN_RIGHT_WIDTH: 393,\n  RUN_RIGHT_HEIGHT: 342,\n  RUN_LEFT_WIDTH: 609,\n  RUN_LEFT_HEIGHT: 485,\n  PHASE_WIDTH: 761,\n  PHASE_HEIGHT: 1200,\n  DEAD_WIDTH: 925,\n  DEAD_HEIGHT: 1600,\n}\n\nconst DmgText = __webpack_require__(/*! ../damage */ \"./src/damage.js\");\n\nclass DongDong {\n  constructor(game, bossCanvas) {\n    // console.log(bossCanvas);\n    // console.log(game);\n    // console.log(bossCanvas); \n    this.maxHitPoints = game.level * game.monsterBaseHP;\n    this.hitPoints = this.maxHitPoints;\n    this.x = 500;\n    this.y = -30;\n    this.bossFrames = 0;\n    this.canvas = bossCanvas;\n    this.canvasWidth = 768;\n    this.frameRate = 5;\n    this.game = game;\n    this.speed = 4;\n    this.image = new Image();\n    this.image.src = './assets/images/characters/bosses/dongdong/dong-run-sprite-sheet-left-big.png';\n    this.width = dongDongSizes.RUN_LEFT_WIDTH;\n    this.height = dongDongSizes.RUN_LEFT_HEIGHT;\n\n\n\n    this.phase = 1;\n    this.phaseFrames = 0;\n    this.step = 0;\n    this.frame = 0;\n    this.deathStatus = false;\n    this.deathFrames = 400;\n\n  }\n\n  takeDamage(partyMember) {\n    this.bossFrames = 1;\n    if (Math.random() >= (1 - (partyMember.critChance * 0.01))) {\n      console.log(\"CRITICAL!\")\n      this.hitPoints -= partyMember.attackPower * 2;\n      let damageText = new DmgText(this.game, partyMember.attackPower * 2, true);\n\n      this.game.damageTexts.push(damageText);\n    } else {\n      this.hitPoints -= partyMember.attackPower;\n      let damageText = new DmgText(this.game, partyMember.attackPower, false);\n\n      this.game.damageTexts.push(damageText);\n    }\n    // debug death\n\n    // console.log(this.hitPoints);\n  }\n\n  takeDamageLimitBreak(heroDamage, critChance) {\n    this.hitPoints -= heroDamage;\n    let damageText;\n    if (Math.random() >= (1 - (critChance * 0.01))) {\n      console.log(\"JKLDFSDS\");\n      damageText = new DmgText(this.game, (heroDamage * 1.5), true);\n    } else {\n      damageText = new DmgText(this.game, heroDamage, false);\n    }\n    this.game.damageTexts.push(damageText);\n\n  }\n\n  hpPercentage() {\n    let currentHpPercentage = (this.hitPoints / this.maxHitPoints);\n    if (currentHpPercentage >= 0) {\n      return currentHpPercentage;\n    } else\n      return 0;\n  }\n\n  death() {\n\n    this.deathStatus = true;\n    // temporary death\n\n    this.game.player.freeCurrency += 40000;\n  }\n\n  update() {\n\n    this.step += 1;\n\n    if (this.step > this.frameRate) {\n      this.step = 0;\n      this.frame += 1;\n    }\n\n    if (this.frame > 9) {\n      this.frame = 0;\n    }\n\n  }\n\n  deathAnimation() {\n    // console.log(this.deathFrames);\n    this.deathFrames -= 1;\n    document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"6\";\n    this.image.src = './assets/images/characters/bosses/dongdong/dong-dong-dead.png';\n    this.frameRate = 55;\n    // console.log(this.x);\n    this.width = dongDongSizes.DEAD_WIDTH;\n    this.height = dongDongSizes.DEAD_HEIGHT;\n    this.y = -54;\n\n    if (this.deathFrames <= 0) {\n      this.game.bossDeath();\n      this.deathFrames = 0;\n\n    }\n\n  }\n\n  shift() {\n    // console.log(this.x)\n    // console.log(this.phaseFrames);\n    // console.log(this.phase);\n    // console.log(this.deathStatus);\n    // console.log(`HP: ${this.hitPoints}`);\n\n    // console.log(this.image.src);\n    if (this.deathStatus) {\n      this.y = -54;\n\n      // if dead and x position is returning from moving -> right\n      if (this.x >= -120) {\n        // console.log(this.x)\n        this.frame = 0;\n        document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"6\";\n        this.image.src = './assets/images/characters/bosses/dongdong/dong-dong-dead.png';\n        this.width = dongDongSizes.DEAD_WIDTH;\n        this.height = dongDongSizes.DEAD_HEIGHT;\n        this.speed = 3;\n        // up \n      } else {\n\n        this.speed = 0;\n        this.deathAnimation();\n      }\n    } else if (this.phase === 2) {\n\n      if (this.x >= 120) {\n        this.x -= 2;\n      }\n\n      this.y = -200;\n      this.phaseFrames += 1;\n      this.width = dongDongSizes.PHASE_WIDTH;\n      this.height = dongDongSizes.PHASE_HEIGHT;\n      this.image.src = './assets/images/characters/bosses/dongdong/dong-dong-confront.png';\n      document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"8\";\n\n      if (this.phaseFrames >= 760) {\n        this.phaseFrames = 0;\n        this.phase = 0;\n        this.speed = 6;\n      } else {\n        this.speed = 0;\n      }\n    } else if (this.x >= (this.canvasWidth)) {\n\n      this.width = dongDongSizes.RUN_LEFT_WIDTH;\n      this.height = dongDongSizes.RUN_LEFT_HEIGHT;\n      this.image.src = './assets/images/characters/bosses/dongdong/dong-run-sprite-sheet-left-big.png';\n      document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"5\";\n      this.y = -40;\n      this.phase += 1\n      if (this.hitPoints <= 0) {\n        this.frameRate = 0;\n        this.death();\n      }\n      this.speed = -(this.speed);\n    } else if (this.x <= -this.width) {\n      this.width = dongDongSizes.RUN_RIGHT_WIDTH;\n      this.height = dongDongSizes.RUN_RIGHT_HEIGHT;\n      this.x = -300;\n      this.y = 0;\n\n      this.speed = -(this.speed);\n      this.image.src = './assets/images/characters/bosses/dongdong/dong-run-sprite-sheet-right-hills.png';\n      document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"3\";\n    }\n\n\n    this.x += -(this.speed);\n\n\n  }\n\n\n  draw() {\n    this.update();\n    this.shift();\n    this.canvas.clearRect(0, 0, 800, 800);\n    this.canvas.save();\n\n    this.canvas.drawImage(\n      this.image,\n      this.width * this.frame,\n      0,\n      this.width,\n      this.height,\n      this.x,\n      this.y,\n      this.width,\n      this.height\n    );\n    this.canvas.restore();\n  }\n}\n\nmodule.exports = DongDong;\n\n\n//# sourceURL=webpack:///./src/bosses/lion.js?");

/***/ }),

/***/ "./src/bosses/lootbox.js":
/*!*******************************!*\
  !*** ./src/bosses/lootbox.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const dongDongSizes = {\n  RUN_RIGHT_WIDTH: 393,\n  RUN_RIGHT_HEIGHT: 342,\n  RUN_LEFT_WIDTH: 545,\n  RUN_LEFT_HEIGHT: 885,\n  PHASE_WIDTH: 761,\n  PHASE_HEIGHT: 1200,\n  DEAD_WIDTH: 925,\n  DEAD_HEIGHT: 1600,\n}\n\nconst DmgText = __webpack_require__(/*! ../damage */ \"./src/damage.js\");\n\nclass LootBox {\n  constructor(game, bossCanvas) {\n    // console.log(bossCanvas);\n    // console.log(game);\n    // console.log(bossCanvas); \n    this.maxHitPoints = game.level * game.monsterBaseHP;\n    this.hitPoints = this.maxHitPoints;\n    this.x = 400;\n    this.y = -30;\n    this.bossFrames = 0;\n    this.canvas = bossCanvas;\n    this.canvasWidth = 768;\n    this.frameRate = 5;\n    this.game = game;\n    this.speed = 2;\n    this.image = new Image();\n    this.image.src = './assets/images/characters/bosses/lootbox/lootbox.png';\n    this.width = dongDongSizes.RUN_LEFT_WIDTH;\n    this.height = dongDongSizes.RUN_LEFT_HEIGHT;\n\n\n    this.flyUp = true;\n    this.flySpeed = this.speed;\n    this.shiftValue = this.speed;\n    this.phase = 1;\n    this.phaseFrames = 0;\n    this.step = 0;\n    this.frame = 0;\n    this.deathStatus = false;\n    this.deathFrames = 400;\n\n  }\n\n  takeDamage(partyMember) {\n    this.bossFrames = 1;\n    if (Math.random() >= (1 - (partyMember.critChance * 0.01))) {\n      console.log(\"CRITICAL!\")\n      this.hitPoints -= partyMember.attackPower * 2;\n      let damageText = new DmgText(this.game, partyMember.attackPower * 2, true);\n\n      this.game.damageTexts.push(damageText);\n    } else {\n      this.hitPoints -= partyMember.attackPower;\n      let damageText = new DmgText(this.game, partyMember.attackPower, false);\n\n      this.game.damageTexts.push(damageText);\n    }\n    if (this.hitPoints <= 0 ) {\n      this.death();\n    }\n    // debug death\n\n    // console.log(this.hitPoints);\n  }\n\n  takeDamageLimitBreak(heroDamage, critChance) {\n    this.hitPoints -= heroDamage;\n    let damageText;\n    if (Math.random() >= (1 - (critChance * 0.01))) {\n      // console.log(\"JKLDFSDS\");\n      damageText = new DmgText(this.game, (heroDamage * 1.5), true);\n    } else {\n      damageText = new DmgText(this.game, heroDamage, false);\n    }\n    this.game.damageTexts.push(damageText);\n\n  }\n\n  hpPercentage() {\n    let currentHpPercentage = (this.hitPoints / this.maxHitPoints);\n    if (currentHpPercentage >= 0) {\n      return currentHpPercentage;\n    } else\n      return 0;\n  }\n\n  death() {\n    this.game.bossDeath();\n    this.deathStatus = true;\n    // temporary deaththis.game.bossDeath();\n\n    this.game.player.freeCurrency += 4000;\n  }\n\n  update() {\n\n    this.step += 1;\n\n    if (this.step > this.frameRate) {\n      this.step = 0;\n      this.frame += 1;\n    }\n\n    if (this.frame > 7) {\n      this.frame = 0;\n    }\n\n  }\n\n  deathAnimation() {\n    // console.log(this.deathFrames);\n    this.deathFrames -= 1;\n    document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"6\";\n    this.image.src = './assets/images/characters/bosses/dongdong/dong-dong-dead.png';\n    this.frameRate = 55;\n    // console.log(this.x);\n    this.width = dongDongSizes.DEAD_WIDTH;\n    this.height = dongDongSizes.DEAD_HEIGHT;\n    this.y = -54;\n\n    if (this.deathFrames <= 0) {\n      this.game.bossDeath();\n      this.deathFrames = 0;\n\n    }\n\n  }\n\n  shift() {\n    // console.log(this.phase);\n    if (this.phase === 2) {\n      this.image.src = './assets/images/characters/bosses/lootbox/lootbox-phase.png';\n      if (this.phaseFrames <= 400) {\n        if (this.x >= 160) {\n          this.x -= 1;\n\n        }\n        this.phaseFrames += 1;\n        this.speed = 0;\n        this.y -= 0.5;\n      } else {\n        this.phase = 0;\n        this.speed = 2;\n        this.phaseFrames = 0;\n      }\n      \n    } else {\n      \n      let shiftValue = this.flySpeed;\n      if (this.y <= 10) {\n        this.flyUp = true;\n      }\n      else if (this.y >= 85) {\n        this.flyUp = false;\n      }\n\n      if (this.flyUp === true) {\n        this.y += shiftValue;\n      } else if (this.flyUp === false) {\n        this.y -= shiftValue;\n      }\n\n      this.x -= this.speed;\n      if (this.x >= 400) {\n        this.image.src = './assets/images/characters/bosses/lootbox/lootbox.png';\n        this.speed = -(this.speed)\n        this.phase += 1;\n      }\n      else if (this.x <= -25) {\n        this.image.src = './assets/images/characters/bosses/lootbox/lootbox-right.png';\n        this.speed = -(this.speed)\n      }\n    }\n    \n  }\n\n\n\n  draw() {\n    this.update();\n    this.shift();\n    this.canvas.clearRect(0, 0, 800, 800);\n    this.canvas.save();\n\n    this.canvas.drawImage(\n      this.image,\n      this.width * this.frame,\n      0,\n      this.width,\n      this.height,\n      this.x,\n      this.y,\n      this.width,\n      this.height\n    );\n    this.canvas.restore();\n  }\n}\n\nmodule.exports = LootBox;\n\n\n//# sourceURL=webpack:///./src/bosses/lootbox.js?");

/***/ }),

/***/ "./src/controls.js":
/*!*************************!*\
  !*** ./src/controls.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Game = __webpack_require__(/*! ./game */ \"./src/game.js\");\nconst DongDong = __webpack_require__(/*! ./bosses/dongdong */ \"./src/bosses/dongdong.js\");\nconst Alishar = __webpack_require__(/*! ./bosses/alishar */ \"./src/bosses/alishar.js\");\nconst Lootbox = __webpack_require__(/*! ./bosses/lootbox */ \"./src/bosses/lootbox.js\");\n\nclass Controls {\n  constructor(game) {\n    this.game = game;\n    this.bindKeyHandlers();\n    let bossLayerIndex;\n  }\n\n  bindKeyHandlers() {\n    this.game.gameCanvas.addEventListener('keydown', (e) => this.keyboardTap(e));\n    this.game.gameCanvas.addEventListener('keyup', (e) => this.keyboardTapRelease(e));\n  }\n\n  keyboardTap(e) {\n    if (e.repeat) { return }\n    switch (e.key) {\n      case 'a':\n        this.game.heroA.heroAttackAnimation();\n        this.game.boss.takeDamage(this.game.heroA);\n        break;\n      case 's':\n        this.game.heroB.heroAttackAnimation();\n        this.game.boss.takeDamage(this.game.heroB);\n        break;\n      case 'd':\n        this.game.heroC.heroAttackAnimation();\n        this.game.boss.takeDamage(this.game.heroC);\n        break;\n      case 'f':\n        this.game.heroD.heroAttackAnimation();\n        this.game.boss.takeDamage(this.game.heroD);\n        break;\n      case 'h':\n        return this.game.menu.toggleMenu();\n      case 'z':\n        return this.game.heroA.upgradeStr();\n      case 'x':\n        return this.game.heroB.upgradeStr();\n      case 'c':\n        return this.game.heroC.upgradeStr();\n      case 'v':\n        return this.game.heroD.upgradeStr();\n      //debug keys\n      case 'g':\n        this.game.heroA.limitBreakFrames = 40;\n        this.game.heroB.limitBreakFrames = 40;\n        this.game.heroC.limitBreakFrames = 40;\n        this.game.heroD.limitBreakFrames = 40;\n        break;\n      case 'p':\n        return console.log(this.game.boss);\n      case 'j':\n        // this.game.bossDeath();\n        document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"5\";\n        this.game.boss = new DongDong(this.game, this.game.options.frontBoss);\n        break;\n      case 'k':\n        // this.game.bossDeath();\n        document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"2\";\n        return this.game.boss = new Alishar(this.game, this.game.options.frontBoss);\n      case 'l':\n        // this.game.boss Death();\n        document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"5\";\n        return this.game.boss = new Lootbox(this.game, this.game.options.frontBoss);\n\n      case 'q':\n        // document.getElementById(\"limit-break-canvas\").style.zIndex = \"9999\";\n        document.getElementById(\"limit-break-canvas\").style.zIndex = \"9\";\n        this.game.callLimitBreak(\"rage\");\n        break;\n      case 'w':\n        let bossLayerIndex = parseInt(document.getElementById(\"boss-layer-c-canvas\").style.zIndex);\n        document.getElementById(\"limit-break-canvas\").style.zIndex = bossLayerIndex;\n        this.game.callLimitBreak(\"drizzle\");\n        break\n      case 'e':\n        document.getElementById(\"limit-break-canvas\").style.zIndex = 1544;\n        this.game.callLimitBreak(\"omni\");\n        break\n      case 'r':\n\n        document.getElementById(\"limit-break-canvas\").style.zIndex = 1544;\n        this.game.callLimitBreak(\"sun\");\n        break\n      \n        \n    }\n  }\n\n  keyboardTapRelease(e) {\n    switch (e.key) {\n      case 'a':\n        this.game.heroA.heroIdle();\n        break;\n      case 's':\n        this.game.heroB.heroIdle();\n        break;\n      case 'd':\n        this.game.heroC.heroIdle();\n        break;\n      case 'f':\n        this.game.heroD.heroIdle();\n        break;\n    }\n  }\n}\n\nmodule.exports = Controls;\n\n//# sourceURL=webpack:///./src/controls.js?");

/***/ }),

/***/ "./src/damage.js":
/*!***********************!*\
  !*** ./src/damage.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("class DamageText {\n  constructor(game, damage, crit) {\n    this.game = game;\n    this.textFrames = 100;\n    this.frame = 0;\n    this.crit = crit;\n    this.yellow;\n    this.black;\n    this.red;\n\n    // console.log(this.game.gameCanvas.clientHeight);\n    // console.log(this.game.gameCanvas.clientWidth);\n    //minimum maximum blah formula\n    this.x = Math.min(Math.max(parseInt(this.game.boss.x + (this.game.boss.width / 2) + Math.floor((Math.random() * (this.game.gameCanvas.clientWidth * 0.10)) + 1)), 0), (this.game.gameCanvas.clientWidth * 0.95));\n    this.y = Math.min(Math.max(parseInt(this.game.boss.y + (this.game.boss.height / 3) + Math.floor((Math.random() * 44) + 1)), 200), 600);\n    // this.y = \n    this.text = damage;\n    // console.log(this.text);\n  }\n\n  update() {\n    this.frame += 1;\n    this.y -= 1;\n    this.textFrames -= 1;\n\n    \n\n  }\n\n  draw() {\n    this.update();\n\n    this.black = `rgb(0, 0, 0, ${(this.textFrames * 0.01)})`;\n    if (this.crit) {\n      this.red = `rgb(255, 75, 0, ${(this.textFrames * 0.01)})`;\n      this.x += Math.round(Math.random()) * 1 - 1\n      // console.log(`${(this.textFrames * 0.01) }`);\n      this.game.context.fillStyle = this.red;\n      this.game.context.strokeStyle = this.black;\n      this.game.context.font = '24pt Arial Black';\n    } else {\n      this.yellow = `rgb(255, 255, 0, ${(this.textFrames * 0.03)})`;\n      this.game.context.fillStyle = this.yellow;\n      this.game.context.strokeStyle = this.black;\n      this.game.context.font = '15pt Arial Black';\n    }\n    \n    \n    this.game.context.fillText(this.text, this.x, this.y);\n    this.game.context.strokeText(this.text, this.x, this.y);\n  }\n\n}\nmodule.exports = DamageText;\n\n//# sourceURL=webpack:///./src/damage.js?");

/***/ }),

/***/ "./src/game.js":
/*!*********************!*\
  !*** ./src/game.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Player = __webpack_require__(/*! ./player */ \"./src/player.js\");\nconst Tap = __webpack_require__(/*! ./tap */ \"./src/tap.js\");\nconst Scroller = __webpack_require__(/*! ./scroller */ \"./src/scroller.js\");\nconst Party = __webpack_require__(/*! ./party */ \"./src/party.js\");\nconst Boss = __webpack_require__(/*! ./boss */ \"./src/boss.js\");\nconst Controls = __webpack_require__(/*! ./controls */ \"./src/controls.js\");\nconst Menu = __webpack_require__(/*! ./menu */ \"./src/menu.js\");\n\n\n//bosses\nconst DongDong = __webpack_require__(/*! ./bosses/dongdong */ \"./src/bosses/dongdong.js\");\nconst Alishar = __webpack_require__(/*! ./bosses/alishar */ \"./src/bosses/alishar.js\");\n// const Rage = require('./bosses/rage');\nconst Lion = __webpack_require__(/*! ./bosses/lion */ \"./src/bosses/lion.js\");\nconst Lootbox = __webpack_require__(/*! ./bosses/lootbox */ \"./src/bosses/lootbox.js\");\n\n//limit breaks\nconst TeaDrizzle = __webpack_require__(/*! ./artifacts/teadrizzle */ \"./src/artifacts/teadrizzle.js\");\nconst CaffeineRage = __webpack_require__(/*! ./artifacts/caffeinerage */ \"./src/artifacts/caffeinerage.js\");\nconst Omnibag = __webpack_require__(/*! ./artifacts/omnibag */ \"./src/artifacts/omnibag.js\");\nconst TeaSun = __webpack_require__(/*! ./artifacts/teasun */ \"./src/artifacts/teasun.js\");\nconst TeaPaw = __webpack_require__(/*! ./artifacts/teapaw */ \"./src/artifacts/teapaw.js\");\n\n\nclass Game {\n  constructor(options)  {\n\n    console.log(\"DEBUG VERSION TEST NOV222019 836AM\")\n    this.options = options;\n    this.context = options.context;\n    this.gameCanvas = options.gameCanvas;\n    this.gameCanvas.setAttribute(\"tabindex\", 0);\n    const { partyUI } = options;\n    this.level = 1;\n    this.monsterBaseHP = 1000;\n    this.damageTexts = [];\n    this.limitBreak = null;\n\n    this.autoAttackSpeed = 1;\n    this.menu = new Menu(this, options.menu);\n    \n    this.player = new Player();\n\n    this.controls = new Controls(this);\n\n    this.draw = this.draw.bind(this);\n\n    this.drawBackground(options);\n    this.drawParty(partyUI[0], partyUI[1], partyUI[2], partyUI[3]);\n\n    this.initializeBosses(options);\n  \n    this.randomBoss(options);\n\n    \n\n    Tap.tapMethods({\n      player: this.player,\n      heroA: this.heroA,\n      heroB: this.heroB,\n      heroC: this.heroC,\n      heroD: this.heroD,\n      boss: this.bossLayerC\n    });\n\n\n    // limiting frame rate\n    this.fps = 60;\n    this.now;\n    this.then = Date.now();\n    this.interval = 1000/this.fps;\n    this.delta;\n  }\n\n  randomBoss(options) {\n    let random = Math.floor((Math.random() * 3) + 1);\n    this.level += 1;\n    if (this.level % 5 === 0 ) {\n      this.monsterBaseHP * 1.20;\n    }\n\n    switch (random) {\n      case 1:\n        document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"5\"; \n        this.boss = new DongDong(this, options.frontBoss);\n        break\n      case 2:\n        document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"2\";\n        this.boss = new Alishar(this, options.frontBoss);\n        break\n      // case 3:\n      //   document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"9\";\n      //   this.boss = new Rage(this, options.frontBoss);\n      //   break\n      case 3:\n        document.getElementById(\"boss-layer-c-canvas\").style.zIndex = \"7\";\n        this.boss = new Lootbox(this, options.frontBoss);\n        break\n    }\n  }\n\n  initializeBosses(options) {\n    this.dongdong = new DongDong(this, options.frontBoss);\n    this.alishar = new Alishar(this, options.frontBoss);\n  }\n\n  callLimitBreak(limitBreakName) {\n    document.getElementById(\"limit-break-canvas\").style.width = `768`;\n    if (this.limitBreak === null ) {\n      switch (limitBreakName) {\n        case 'rage':\n          if (this.heroA.limitBreakFrames === 40) {\n            this.heroA.limitBreakFrames = 0;\n            this.limitBreak = new CaffeineRage(this, this.options.limitBreak);\n          }\n          \n          break;\n        case 'drizzle':\n          if (this.heroB.limitBreakFrames === 40) {\n            this.heroB.limitBreakFrames = 0;\n            this.limitBreak = new TeaDrizzle(this, this.options.limitBreak);\n          }\n          break;\n        case 'omni':\n          if (this.heroC.limitBreakFrames === 40) {\n            this.heroC.limitBreakFrames = 0;\n            this.limitBreak = new Omnibag(this, this.options.limitBreak);\n          }\n          break;\n        case 'sun':\n          if (this.heroD.limitBreakFrames === 40) {\n            this.heroD.limitBreakFrames = 0;\n            this.limitBreak = new TeaPaw(this, this.options.limitBreak);\n          }\n          \n          break;\n      }\n    }\n   \n\n  }\n\n  removeLimitBreak() {\n    document.getElementById(\"limit-break-canvas\").style.width = `768`;\n    let oldLimitBreak = this.limitBreak;\n    oldLimitBreak = null;\n    this.limitBreak = null;\n  }\n\n  bossDeath() {\n    //testing, not DRY\n    // delete this.dongdong;\n    let oldBoss = this.boss;\n    oldBoss = null;\n    this.boss = null;\n\n    this.player.freeCurrency += (this.level * 1000);\n\n    \n    console.log(\"dead boss debug\");\n    this.randomBoss(this.options);\n    console.log(this.boss);\n  }\n\n  \n\n  drawBackground(options) {\n    const hill = new Image();\n    const sky = new Image();\n    const fuji = new Image();\n    const mountains = new Image();\n    const backgroundMountains = new Image();\n    const cloudLayerA = new Image();\n    const cloudLayerC = new Image();\n\n    const bossLayerC = new Image();\n    // console.log(hill);\n  \n    // hill.src = \"./assets/images/layers/smallhill.png\";\n    // dist / assets / images / layers / hill.png\n    hill.src = \"./assets/images/layers/hill.png\";\n    sky.src = \"./assets/images/layers/sky_fc.png\";\n    fuji.src = \"./assets/images/layers/fuji.png\";\n    mountains.src = './assets/images/layers/grassy_mountains_fc.png';\n    backgroundMountains.src = './assets/images/layers/far_mountains_fc.png';\n    cloudLayerA.src = './assets/images/layers/clouds_front_fc.png';\n    cloudLayerC.src = './assets/images/layers/clouds_mid_fc.png';\n    bossLayerC.src = './assets/images/characters/bosses/mana-beast-idle.png';\n  \n\n    this.hill = new Scroller(options.hill, hill, -8, 768, 0);\n    this.sky = new Scroller(options.sky, sky, -5, 768, 0);\n    this.fuji = new Scroller(options.fuji, fuji, 24, 1468, 0.1);\n    this.mountains = new Scroller(options.mountains, mountains, -15, 768, 0.2);\n    this.backgroundMountains = new Scroller(options.backgroundMountains, backgroundMountains, -15, 768, 0.3);\n    this.cloudLayerA = new Scroller(options.frontCloudLayer, cloudLayerA, 0, 768, 0.2);\n    this.cloudLayerC = new Scroller(options.backCloudLayer, cloudLayerC, -10, 768, 0.6)\n    this.bossLayerC = new Boss(options.frontBoss, bossLayerC, 110, 768, 0.2, this.player)\n  }\n\n  drawParty(partyA, partyB, partyC, partyD) {\n    const heroIdleA = new Image();\n    const heroIdleB = new Image();\n    const heroIdleC = new Image();\n    const heroIdleD = new Image();\n    heroIdleA.src = \"./assets/images/characters/hero/lufia-a-idle.png\";\n    heroIdleB.src = \"./assets/images/characters/hero/lufia-b-idle.png\";\n    heroIdleC.src = \"./assets/images/characters/hero/lufia-c-idle.png\";\n    heroIdleD.src = \"./assets/images/characters/hero/lufia-d-idle.png\";\n\n    const heroPrepA = new Image();\n    const heroPrepB = new Image();\n    const heroPrepC = new Image();\n    const heroPrepD = new Image();\n    heroPrepA.src = \"./assets/images/characters/hero/lufia-a-prep.png\";\n    heroPrepB.src = \"./assets/images/characters/hero/lufia-b-prep.png\";\n    heroPrepC.src = \"./assets/images/characters/hero/lufia-c-prep.png\";\n    heroPrepD.src = \"./assets/images/characters/hero/lufia-d-prep.png\";\n\n    const heroAttackA = new Image();\n    const heroAttackB = new Image();\n    const heroAttackC = new Image();\n    const heroAttackD = new Image();\n    heroAttackA.src = \"./assets/images/characters/hero/lufia-a-attack.png\";\n    heroAttackB.src = \"./assets/images/characters/hero/lufia-b-attack.png\";\n    heroAttackC.src = \"./assets/images/characters/hero/lufia-c-attack.png\";\n    heroAttackD.src = \"./assets/images/characters/hero/lufia-d-attack.png\";\n\n    const heroKeyDownA = new Image();\n    const heroKeyDownB = new Image();\n    const heroKeyDownC = new Image();\n    const heroKeyDownD = new Image();\n    heroKeyDownA.src = \"./assets/images/keys/a-down.png\";\n    heroKeyDownB.src = \"./assets/images/keys/s-down.png\";\n    heroKeyDownC.src = \"./assets/images/keys/d-down.png\";\n    heroKeyDownD.src = \"./assets/images/keys/f-down.png\";\n\n    const heroKeyUpA = new Image();\n    const heroKeyUpB = new Image();\n    const heroKeyUpC = new Image();\n    const heroKeyUpD = new Image();\n    heroKeyUpA.src = \"./assets/images/keys/a-up.png\";\n    heroKeyUpB.src = \"./assets/images/keys/s-up.png\";\n    heroKeyUpC.src = \"./assets/images/keys/d-up.png\";\n    heroKeyUpD.src = \"./assets/images/keys/f-up.png\";\n\n    let heroOptionsA = {\n      context: partyA,\n      idleImage: heroIdleA,\n      prepImage: heroPrepA,\n      attackImage: heroAttackA,\n      heroKeyDown: heroKeyDownA,\n      heroKeyUp: heroKeyUpA,\n    }\n\n    // console.log(heroOptionsA);\n\n    let heroOptionsB = {\n      context: partyB,\n      idleImage: heroIdleB,\n      prepImage: heroPrepB,\n      attackImage: heroAttackB,\n      heroKeyDown: heroKeyDownB,\n      heroKeyUp: heroKeyUpB,\n    }\n\n    let heroOptionsC = {\n      context: partyC,\n      idleImage: heroIdleC,\n      prepImage: heroPrepC,\n      attackImage: heroAttackC,\n      heroKeyDown: heroKeyDownC,\n      heroKeyUp: heroKeyUpC,\n    }\n\n    let heroOptionsD = {\n      context: partyD,\n      idleImage: heroIdleD,\n      prepImage: heroPrepD,\n      attackImage: heroAttackD,\n      heroKeyDown: heroKeyDownD,\n      heroKeyUp: heroKeyUpD,\n    }\n    \n    this.heroA = new Party(this, heroOptionsA, 180);\n    this.heroB = new Party(this, heroOptionsB, 120);\n    this.heroC = new Party(this, heroOptionsC, 60);\n    this.heroD = new Party(this, heroOptionsD, 0);\n    this.autoAttackFrames = 200;\n  }\n\n\n  draw() {\n    requestAnimationFrame(this.draw);\n\n    this.gameCanvas.focus();\n\n    this.now = Date.now();\n    this.delta = this.now - this.then;\n\n    if ( this.delta > this.interval ) {\n\n      // this.autoAttackFrames -= this.autoAttackSpeed;\n      // //debug auto\n      // if (this.autoAttackFrames === 150) {\n      //   this.heroA.heroAttackAnimation();\n      //   this.boss.takeDamage(this.heroA);\n      // } else if (this.autoAttackFrames === 100) {\n      //   this.heroB.heroAttackAnimation();\n      //   this.boss.takeDamage(this.heroB);\n      // } else if (this.autoAttackFrames === 50) {\n      //   this.heroC.heroAttackAnimation();\n      //   this.boss.takeDamage(this.heroC);\n      // } else if (this.autoAttackFrames <= 0) {\n      //   this.autoAttackFrames = 200;\n      //   this.heroD.heroAttackAnimation();\n      //   this.boss.takeDamage(this.heroD);\n      // }\n\n      // temporary stat display\n      this.player.drawTapPower(this.context);\n\n      // main canvas parallax draw\n      this.hill.draw();\n      this.sky.draw();\n      this.fuji.draw();\n      this.cloudLayerA.draw();\n      this.cloudLayerC.draw();\n      this.mountains.draw();\n      this.backgroundMountains.draw();\n\n\n      if (this.damageTexts.length > 0) {\n        // console.log(this.damageTexts);\n        this.damageTexts.forEach(dmgText => {\n          dmgText.draw();\n          if (dmgText.textFrames <= 0) {\n            this.damageTexts.shift();\n            dmgText = null;\n          }\n        });\n      }\n\n      // party canvas draw\n      this.heroA.draw('a');\n      this.heroB.draw('b');\n      this.heroC.draw('c');\n      this.heroD.draw('d');\n\n      // boss draw\n      // this.bossLayerC.draw();\n      this.boss.draw();\n\n      //artifacts\n      if (this.limitBreak) {\n        this.limitBreak.draw();\n      }\n\n      //menu\n      if (this.menu.open) {\n        this.menu.draw();\n      }\n\n      if (this.boss) {\n        const currentHp = this.boss.hpPercentage();\n        // console.log(currentHp);\n        this.context.strokeStyle = \"rgba(0, 0, 0, 0.4)\";\n        this.context.rect(125, 26, 550, 24);\n\n        //hp bar background\n        this.context.fillStyle = \"rgba(222, 0, 0, 0.7)\";\n        this.context.stroke();\n        this.context.fillRect(126, 26.5, (549.5 * currentHp), 24);\n\n        this.context.fillStyle = \"rgba(0, 0, 0, 0.4)\";\n        this.context.stroke();\n        this.context.fillRect(126 + (549.5 * currentHp), 26.5, (549.5 - (549.5 * currentHp)), 24);\n\n        this.context.font = \"15px Arial\";\n        this.context.fillStyle = \"white\";\n        (this.boss.hitPoints >= 0) ?\n          this.context.fillText(`${this.boss.hitPoints} / ${this.boss.maxHitPoints}`, 544, 47) :\n          this.context.fillText(\"debug: wait for death animation (phase 2)\", 254, 47);\n\n\n      }\n\n      this.then = this.now - (this.delta % this.interval);\n      // console.log(`FPS: ${((this.now - this.then) * 6)}`);\n\n    }\n  \n    \n\n    \n\n  }\n\n}\n\nmodule.exports = Game;\n\n//# sourceURL=webpack:///./src/game.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("console.log(\"Webpack is working!\");\nconst Game = __webpack_require__(/*! ./game.js */ \"./src/game.js\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  const gameCanvas = document.getElementById(\"game-canvas\");\n  const context = document.getElementById(\"game-canvas\").getContext('2d');\n\n  // ui contexts\n  const menu = document.getElementById('menu-canvas').getContext('2d');\n\n  // artifacts / limit breaks\n  const limitBreak = document.getElementById('limit-break-canvas').getContext('2d');\n\n  // environment contexts\n  const hill = document.getElementById('hill-canvas').getContext('2d');\n  const sky = document.getElementById('sky-canvas').getContext('2d');\n  const fuji = document.getElementById('fuji-canvas').getContext('2d');\n  const cloudLayerA = document.getElementById('cloud-layer-a-canvas').getContext('2d');\n  const cloudLayerC = document.getElementById('cloud-layer-c-canvas').getContext('2d');\n  const mountains = document.getElementById('mountains-canvas').getContext('2d');\n  const backgroundMountains = document.getElementById('background-mountains-canvas').getContext('2d');\n\n  // party UI contexts\n  const partyA = document.getElementById('party-member-canvas-a').getContext('2d');\n  const partyB = document.getElementById('party-member-canvas-b').getContext('2d');\n  const partyC = document.getElementById('party-member-canvas-c').getContext('2d');\n  const partyD = document.getElementById('party-member-canvas-d').getContext('2d');\n  const partyGroup = [partyA, partyB, partyC, partyD];\n\n  // enemy contexts\n  const bossLayerC = document.getElementById('boss-layer-c-canvas').getContext('2d');\n  \n  const options = {\n    context: context,\n    gameCanvas: gameCanvas,\n    mountains: mountains,\n    backgroundMountains: backgroundMountains,\n    frontCloudLayer: cloudLayerA,\n    backCloudLayer: cloudLayerC,\n    hill: hill,\n    sky: sky,\n    fuji: fuji,\n    frontBoss: bossLayerC,\n    partyUI: partyGroup,\n    menu: menu,\n    limitBreak: limitBreak\n    \n  };\n\n  const game = new Game(options);\n\n  game.draw();\n})\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/menu.js":
/*!*********************!*\
  !*** ./src/menu.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("class Menu {\n  constructor(game, canvas) {\n    this.game = game;\n    this.canvas = canvas;\n    this.open = false;\n    this.menu = new Image();\n    this.menu.src = \"./assets/images/ui/menu-blue-big.png\";\n    console.log(canvas);\n    console.log(game);\n  }\n\n  toggleMenu() {\n    this.open = !this.open;\n\n    if (!this.open) {\n      this.canvas.clearRect(0,0,888,888);\n      document.getElementById(\"menu-canvas\").style.zIndex = \"1\"; \n    } else {\n      document.getElementById(\"menu-canvas\").style.zIndex = \"1001\"; \n    }\n  }\n\n  draw() {\n    this.canvas.clearRect(0, 0, 888, 888);\n    this.canvas.font = \"50px Arial\";\n    this.canvas.fillStyle = 'white';\n    \n    this.canvas.drawImage(this.menu,  83, 40);\n    this.canvas.fillText(\"debug\", 135, 250);\n   \n    \n  }\n}\n\nmodule.exports = Menu;\n\n//# sourceURL=webpack:///./src/menu.js?");

/***/ }),

/***/ "./src/party.js":
/*!**********************!*\
  !*** ./src/party.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("class Party {\n  \n\n  constructor(game, options, attackStart) {\n    this.game = game;\n    console.log(options)\n    this.context = options.context;\n    this.image = options.idleImage;\n    this.height = this.context.canvas.height;\n    this.width = this.context.canvas.width;\n    this.goldCost = 1;\n    this.x = 0;\n    this.y = 0;\n\n    // images\n    this.heroAttackImage = options.attackImage;\n    this.heroPrepImage = options.prepImage;\n    this.keyDown = options.heroKeyDown;\n    this.keyUp = options.heroKeyUp;\n    \n    //stats\n    \n    this.attackFrames = 0;\n    this.attackSpeed = 240;\n    this.attackPower = 1;\n    this.critChance = 10;    \n    this.attackState = false;\n    \n    //autoattack\n    this.frames = attackStart;\n    this.step = 0;\n    this.autoAttack();\n\n    //limit break\n    this.limitBreakFrames = 40;\n  }\n\n  changeSprite() {\n    console.log(this.image);\n  }\n\n  autoAttack() {\n    \n  }\n\n  update() {\n    this.frames += 1;\n    if (this.frames >= this.attackSpeed) {\n      this.frames = 0;\n      this.heroAttackAnimation();\n      this.game.boss.takeDamage(this);\n    }\n  }\n\n  fetchPower() {\n    return this.attackPower;\n  }\n\n  upgradeStr() {\n    if (this.game.player.freeCurrency >= this.goldCost) {\n      this.attackPower += 1;\n      this.attackSpeed -= 1;\n      this.game.player.freeCurrency -= this.goldCost;\n      this.goldCost += 5;\n    }\n    \n  }\n\n  heroAttackAnimation() {\n    this.attackFrames = 8;\n    this.attackState = true;\n    if (this.limitBreakFrames < 40) {\n      this.limitBreakFrames += 1;\n    }\n    \n  }\n\n  heroIdle() {\n    this.attackState = false;\n  }\n\n  drawAttackTimer() {\n    // this.context.beginPath();\n    this.context.strokeStyle = \"rgba(0, 0, 0, 0.4)\";\n    this.context.rect( 130, 20, 50, 10);\n    this.context.fillStyle = `rgba(255, ${this.frames}, 0, 0.7)`;\n    this.context.fillRect( 130, 20, ((this.frames / this.attackSpeed)*100)/2, 10);\n\n    this.context.fillStyle = `rgba(255, ${this.frames}, 0, 0.7)`;\n    this.context.fillRect(130, 20, ((this.frames / this.attackSpeed) * 100) / 2, 10);\n  }\n\n  drawLimitBreakTimer() {\n    if (this.limitBreakFrames === 40){\n      this.context.fillStyle = `rgba(0, ${((this.frames + 180) % 255) + 100}, 0, 1)`;\n      this.context.fillRect(70, 20, 50, 10);\n    } else {\n      this.context.fillStyle = `rgba(155, 155, 155, 1)`;\n      this.context.fillRect(70, 20, 50, 10);\n      this.context.strokeStyle = \"rgba(0, 0, 0, 0.4)\";\n      this.context.rect(70, 20, 50, 10);\n      this.context.fillStyle = `rgba(171, ${this.limitBreakFrames * 20}, 171, 1)`;\n      // this.context.stroke();\n      this.context.fillRect(70, 20, ((this.limitBreakFrames / 40) * 100) / 2, 10);\n    }\n    \n    \n    \n  }\n\n  draw() {\n    this.update();\n\n    \n\n    this.context.clearRect(0, 0, this.width, this.height);\n    this.drawLimitBreakTimer();\n    this.drawAttackTimer();\n    if (this.attackFrames === 1) {\n      document.getElementById(\"boss-layer-c-canvas\").style.filter = \"brightness(100%)\";\n    }\n    if (this.attackFrames === 0) {\n      this.context.drawImage(this.image, this.x, this.y);\n      this.context.drawImage(this.keyUp, 14, 55);\n      this.attackState = false;\n      \n    } else if (this.attackFrames > 0 ) {\n      this.drawAttack();\n      this.attackFrames -= 1;\n    }\n    this.drawStats();\n  }\n\n  \n\n  drawAttack() {\n    if (this.attackFrames > 3) {\n      document.getElementById(\"boss-layer-c-canvas\").style.filter = \"brightness(120%)\";\n      this.context.drawImage(this.heroPrepImage, this.x, this.y);\n      this.context.drawImage(this.keyDown, 14, 55);\n    } else {\n      \n      this.context.drawImage(this.heroAttackImage, this.x, this.y);\n      this.context.drawImage(this.keyDown, 14, 55);\n    }\n    \n    \n  }\n\n  drawStats() {\n    const attackStat = `ATK ${this.attackPower}`;\n    const criticalStat = `CRIT ${this.critChance}%`;\n    const upgradeStat = `COST ${this.goldCost}`;\n    const speedStat = `SPD ${(this.attackSpeed/100)}`;\n    this.context.font = \"10px Arial\";\n    this.context.fillStyle = 'white';\n    this.context.fillText(`LIMIT`, 70, 15);\n    this.context.fillText(`ATK`, 130, 15);\n    // this.context.fillText(\"DEBUG INFO\", 55, 20);\n    this.context.fillText(speedStat, 80, 65);\n    this.context.fillText(attackStat, 130, 50);\n    this.context.fillText(criticalStat, 130, 65);\n    this.context.fillText(upgradeStat, 80, 80);\n  }\n}\n\nmodule.exports = Party;\n\n\n//# sourceURL=webpack:///./src/party.js?");

/***/ }),

/***/ "./src/player.js":
/*!***********************!*\
  !*** ./src/player.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("class Player {\n  constructor() {\n    this.freeCurrency = 0;\n    this.premiumCurrency = 0;\n    this.passiveIncome = 1;\n\n    \n    setInterval(() => this.income(), 1000);\n  }\n\n  tap(value) {\n    // this.freeCurrency += value;\n    // console.log(`FREE CURRENCY ${this.freeCurrency}`);\n  }\n\n  income() {\n    this.freeCurrency += this.passiveIncome;\n  }\n\n  // upgradeTap(value) {\n  //   this.tapPower += value;\n  //   console.log(`${value} added to tap power (${this.tapPower})`);\n  // }\n\n  upgradeIncome(value) {\n    this.passiveIncome += value;\n    console.log(`${value} added to income (${this.passiveIncome})`);\n  }\n\n  addPremiumCurrency(value) {\n    this.premiumCurrency += value;\n  }\n\n  update(context) {\n    this.draw(context);\n  }\n\n  drawTapPower(context) {\n    const width = context.canvas.width;\n    const height = context.canvas.height;\n    context.clearRect(0, 0, width, height);\n    const freeCurrency = `${this.freeCurrency}`;\n    const passiveIncome = `Income: ${this.passiveIncome}`;\n\n    context.font = \"15px Arial\";\n    context.fillStyle = 'white';\n    context.fillText(freeCurrency, 30, 22);\n    // context.fillText(passiveIncome, 10, 60);\n    const freeCurrencyIcon = new Image();\n    freeCurrencyIcon.src = \"./assets/images/misc/gold-coin.png\";\n    context.drawImage(freeCurrencyIcon, 0, 0);\n  }\n\n\n}\n\nmodule.exports = Player;\n\n//# sourceURL=webpack:///./src/player.js?");

/***/ }),

/***/ "./src/scroller.js":
/*!*************************!*\
  !*** ./src/scroller.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("class Scroller {\n  constructor(context, image, startHeight, srcWidth, speed) {\n    this.context = context;\n    this.image = image;\n    this.x = 0;\n    this.y = startHeight;\n    this.srcWidth = srcWidth;\n    this.speed = speed;\n    this.height = this.context.canvas.height;\n    this.width = this.context.canvas.width;\n  }\n\n  draw() {\n    this.context.clearRect(0, 0, this.width, this.height);\n    this.context.drawImage(this.image, this.x, this.y);\n    this.context.drawImage(this.image, this.x + this.srcWidth, this.y);\n    if (this.x <= -this.srcWidth) {\n      this.x = 0;\n    }\n    this.x -= this.speed;\n  }\n}\n\nmodule.exports = Scroller;\n\n\n//# sourceURL=webpack:///./src/scroller.js?");

/***/ }),

/***/ "./src/tap.js":
/*!********************!*\
  !*** ./src/tap.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const Tap = {\n  tapMethods(options) {\n    const tapHeroA = document.getElementById('party-member-canvas-a');\n    const tapHeroB = document.getElementById('party-member-canvas-b');\n    const tapHeroC = document.getElementById('party-member-canvas-c');\n    const tapHeroD = document.getElementById('party-member-canvas-d');\n\n    const player = options.player;\n    const heroA = options.heroA;\n    const heroB = options.heroB;\n    const heroC = options.heroC;\n    const heroD = options.heroD;\n    const boss = options.boss;\n    \n    tapHeroA.addEventListener('click', (e) => {\n      console.log(\"SDJFKLSD\")\n      player.tap(heroA.fetchPower());\n      heroA.heroAttackAnimation();\n      boss.takeDamage(heroA);\n    });\n\n    tapHeroB.addEventListener('click', (e) => {\n      player.tap(heroB.fetchPower());\n      heroB.heroAttackAnimation();\n      boss.takeDamage(heroB);\n    });\n\n    tapHeroC.addEventListener('click', (e) => {\n      player.tap(heroC.fetchPower());\n      heroC.heroAttackAnimation();\n      boss.takeDamage(heroC);\n    });\n\n    tapHeroD.addEventListener('click', (e) => {\n      player.tap(heroD.fetchPower());\n      heroD.heroAttackAnimation();\n      boss.takeDamage(heroD);\n    });\n\n  }\n\n  \n}\n\nmodule.exports = Tap;\n\n//# sourceURL=webpack:///./src/tap.js?");

/***/ })

/******/ });